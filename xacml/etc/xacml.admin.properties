#
# This file is set to the defaults one can use to run the XACML-PAP-ADMIN for testing and development.
#
# It is not recommended to modify this file directly, but rather copy it to another location and make any modifications
# necessary to run the application in a development or a production environment. You can set the Java VM System
# property to change where the application can find the file. For example:
#
#-Dxacml.properties=/opt/app/xacml/etc/xacml.admin.properties 
#
#
# Standard API Factories
#
xacml.dataTypeFactory=org.apache.openaz.xacml.std.StdDataTypeFactory
xacml.pdpEngineFactory=org.apache.openaz.xacml.pdp.OpenAZPDPEngineFactory
xacml.pepEngineFactory=org.apache.openaz.xacml.std.pep.StdEngineFactory
xacml.pipFinderFactory=org.apache.openaz.xacml.std.pip.StdPIPFinderFactory
#
# OpenAZ PDP Implementation Factories
#
xacml.openaz.evaluationContextFactory=org.apache.openaz.xacml.pdp.std.StdEvaluationContextFactory
xacml.openaz.combiningAlgorithmFactory=org.apache.openaz.xacml.pdp.std.StdCombiningAlgorithmFactory
xacml.openaz.functionDefinitionFactory=org.apache.openaz.xacml.pdp.std.StdFunctionDefinitionFactory
xacml.openaz.policyFinderFactory=org.apache.openaz.xacml.pdp.std.StdPolicyFinderFactory

#
# This is an extremely simple policy to demonstrate authorization
# within the Admin Console.
#
xacml.rootPolicies=admin
admin.file=/opt/app/xacml/etc/Policy-Admin.xml

#
# PAP Servlet properties
#
xacml.PAP.papEngineFactory=org.apache.openaz.xacml.std.pap.StdEngineFactory

#
# Admin Console properties
#
xacml.AC.papEngineFactory=org.apache.openaz.xacml.admin.util.RESTfulPAPFactory

# Set your domain here:
#xacml.rest.admin.domain=com:foo:bar
xacml.rest.admin.domain=com
#
# Location where the GIT repository is located
#
xacml.rest.admin.repository=/opt/app/xacml/repository
#
# Location where all the user workspaces are located.
#
xacml.rest.admin.workspace=/opt/app/xacml/workspace

#
# EclipseLink/persistence.xml properties
# 
# You can customize the JPA persistence configuration by setting properties
# in this file.
#
javax.persistence.logging.level" value="FINE"
#
# Here you can turn off drop and creation of the database.
#javax.persistence.schema-generation.database.action=none
#
# Use this to prevent loading of data every time the web application is
# deployed
#javax.persistence.sql-load-script-source=META-INF/empty.sql
#
# Be sure to set these settings within the xacml.admin.properties file, the
# web gui uses these settings for Vaadin SQL Containers instead of using
# JPA containers
#
javax.persistence.jdbc.driver=org.h2.Driver
javax.persistence.jdbc.url=jdbc:h2:file:sql/xacml;MODE=MySQL
javax.persistence.jdbc.user=xadmin
javax.persistence.jdbc.password=cl3@rText

#
# These can be set so the Admin Console knows who is logged on. Ideally, you can run the console in a J2EE
# container and setup authentication as you please. Setting HttpSession attribute values will override these
# values set in the properties files.
#
# ((HttpServletRequest) request).getSession().setAttribute("xacml.rest.admin.user.name", "Homer");
#
# The default policy: Policy-Admin.xml is extremely simple.
#
# You can test authorization within the Admin Console by changing the user id.
# There are 3 supported user ids:
#	guest - Read only access
#	editor - Read/Write access
#	admin - Read/Write/Admin access
#
# An empty or null value for xacml.rest.admin.user.id results in no access to the application at all.
#
# This is for development/demonstration purposes only. A production environment should provide authentication which is
# outside the scope of this application. This application can be used to develop a XACML policy for user authorization
# within this application.
#
#xacml.rest.admin.user.name=Guest
#xacml.rest.admin.user.id=guest
#xacml.rest.admin.user.name=Editor
#xacml.rest.admin.user.id=editor
xacml.rest.admin.user.name=Administrator
xacml.rest.admin.user.id=admin
xacml.rest.admin.user.email=

#
# URL location for the PAP servlet.
#
xacml.rest.pap.url=http://dev.gids.com:9090/pap
